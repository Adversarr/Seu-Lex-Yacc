//
// Created by Yang Jerry on 2022/3/30.
//

#include "sly/AttrDict.h"
#include "sly/FaModel.h"
#include "sly/LrParser.h"
#include "sly/RegEx.h"
#include "sly/Stream2TokenPipe.h"
#include <sly/sly.h>

#include <iostream>
#include <sstream>
#include <vector>

using sly::core::type::AttrDict;
using sly::core::type::Production;
using sly::core::type::Token;
using namespace std;

int main() {
  // return 0;
  sly::utils::Log::SetLogLevel(sly::utils::Log::kWarning);
  // 定义文法
  // 1. 定义tokens
  auto add =
      Token::Terminator("+", 0, sly::core::type::Token::Attr::kLeftAssociative);
  auto sub =
      Token::Terminator("-", 0, sly::core::type::Token::Attr::kLeftAssociative);
  auto multi =
      Token::Terminator("*", 0, sly::core::type::Token::Attr::kLeftAssociative);
  auto div =
      Token::Terminator("/", 0, sly::core::type::Token::Attr::kLeftAssociative);
  auto alpha = Token::Terminator("a", 0);
  auto lb = Token::Terminator("(");
  auto rb = Token::Terminator(")");
  auto blank = Token::Terminator(")");
  sly::core::lexical::RegEx re_add("\\+");
  sly::core::lexical::RegEx re_blank("( |\n|\t)");
  sly::core::lexical::RegEx re_sub("\\-");
  sly::core::lexical::RegEx re_multi("\\*");
  sly::core::lexical::RegEx re_div("/");
  sly::core::lexical::RegEx re_alpha("[0-9]+");
  sly::core::lexical::RegEx re_lb("\\(");
  sly::core::lexical::RegEx re_rb("\\)");
  auto ending = Token::Terminator("EOF_FLAG");
  auto expr = Token::NonTerminator("Expr");
  auto fact = Token::NonTerminator("Fact");
  vector<Production> productions = {
      // expr -> expr + expr
      Production(
          expr,
          {[](vector<YYSTATE> &v) {
             v[0].Set<int>("v", v[1].Get<int>("v") + v[3].Get<int>("v"));
           },
           R"(v[0].Set<int>("v", v[1].Get<int>("v") + v[3].Get<int>("v"));)"})(
          expr)(add)(expr),
      // expr -> expr - expr
      Production(
          expr,
          {[](vector<YYSTATE> &v) {
             v[0].Set<int>("v", v[1].Get<int>("v") - v[3].Get<int>("v"));
           },
           R"(v[0].Set<int>("v", v[1].Get<int>("v") - v[3].Get<int>("v"));)"})(
          expr)(sub)(expr),
      // expr -> fact
      Production(expr, {[](vector<YYSTATE> &v) {
                          v[0].Set<int>("v", v[1].Get<int>("v"));
                        },
                        R"(v[0].Set<int>("v", v[1].Get<int>("v"));)"})(fact),
      // fact -> fact * fact
      Production(
          fact,
          {[](vector<YYSTATE> &v) {
             v[0].Set<int>("v", v[1].Get<int>("v") * v[3].Get<int>("v"));
           },
           R"( v[0].Set<int>("v", v[1].Get<int>("v") * v[3].Get<int>("v"));)"})(
          fact)(multi)(fact),
      // fact -> fact / fact
      Production(
          fact,
          {[](vector<YYSTATE> &v) {
             v[0].Set<int>("v", v[1].Get<int>("v") / v[3].Get<int>("v"));
           },
           R"(v[0].Set<int>("v", v[1].Get<int>("v") / v[3].Get<int>("v"));)"})(
          fact)(div)(fact),
      // fact -> ( expr )
      Production(
          fact,
          {[](vector<YYSTATE> &v) { v[0].Set<int>("v", v[2].Get<int>("v")); },
           R"(v[0].Set<int>("v", v[2].Get<int>("v"));)"})(lb)(expr)(rb),
      // fact -> alpha
      Production(
          fact,
          {[](vector<YYSTATE> &v) {
             v[0].Set<int>("v", atoi(v[1].Get<string>("lval").c_str()));
           },
           R"(v[0].Set<int>("v", atoi(v[1].Get<string>("lval").c_str()));)"})(
          alpha),
  };
  sly::core::grammar::ContextFreeGrammar cfg(productions, expr, ending);
  sly::core::grammar::Lr1 lr1;
  cfg.Compile(lr1);
//   注意要用 R"(....)" 把每一个lambda的实现写进去（我实在是想不到怎么用宏来避免这个丑陋的东西了。
//   先用这个print出来下面的表。
//   auto table = cfg.GetLrTable();
//   table.Print(cout);
  auto table = sly::core::grammar::ParsingTable({{{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=3},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=4},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=6},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=5},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kAccept,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=7},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=8},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=3},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=4},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=3},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=4},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=3},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=4},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=3},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=4},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=18},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=19},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=17},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=20},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=21},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=3},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=7},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=11},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=12},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=18},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=27},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kShiftIn,.id=17},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=1},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=2},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=4},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=5},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, {{sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("(",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("*",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("a",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},{sly::core::type::Token("-",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("/",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token(")",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("+",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kLeftAssociative), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kReduce,.id=6},}},{sly::core::type::Token("EOF_FLAG",sly::core::type::Token::Type::kTerminator,0,sly::core::type::Token::Attr::kNone), {sly::core::grammar::ParsingTable::CellTp{.action = sly::core::grammar::ParsingTable::AutomataAction::kError,.id=0},}},}, }, {{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{2,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{1,}},},{},{},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{10,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{9,}},},{},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{2,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{13,}},},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{2,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{14,}},},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{15,}},},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{16,}},},{},{},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{10,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{22,}},},{},{},{},{},{},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{10,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{23,}},},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{10,}},{sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{24,}},},{},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{25,}},},{{sly::core::type::Token("Fact",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),{26,}},},{},{},{},{},{},{},}, productions,sly::core::type::Token("Expr",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),sly::core::type::Token("#LR augmented#",sly::core::type::Token::Type::kNonTerminator,0,sly::core::type::Token::Attr::kNone),sly::core::type::Token("",sly::core::type::Token::Type::kEpsilon,0,sly::core::type::Token::Attr::kNone));

  sly::core::grammar::LrParser parser(table);

  // 定义词法 transition 和 state
  auto [transition, state] = sly::core::lexical::DfaModel::Merge(
      {re_add.GetDfaModel(), re_alpha.GetDfaModel(), re_div.GetDfaModel(),
       re_lb.GetDfaModel(), re_multi.GetDfaModel(), re_rb.GetDfaModel(),
       re_sub.GetDfaModel(), re_blank.GetDfaModel()});
  auto s2ppl = sly::runtime::Stream2TokenPipe(
      transition, state, {add, alpha, div, lb, multi, rb, sub, blank}, ending);

  string input_string /* = "(1+2)*3"*/;
  cout << "Input Expr: ";
  cin >> input_string;
  cout << "The Expr: " << input_string << endl;
  stringstream input_stream(input_string);
  vector<AttrDict> attributes;
  vector<Token> tokens;
  while (true) {
    auto token = s2ppl.Defer(input_stream);
    if (token == blank)
      continue;
    AttrDict ad;
    ad.Set("lval", s2ppl.buffer_);
    tokens.emplace_back(token);
    attributes.emplace_back(ad);
    if (token == ending)
      break;
  }
  parser.Parse(tokens, attributes);
  auto tree = parser.GetTree();
  cout << "\n\nBefore Annotate.: " << endl;
  tree.Print(std::cout);
  tree.Annotate();
  cout << "\n\nAfter Annotate:" << endl;
  tree.Print(std::cout);
  cout << "\n\nThe Expr: " << input_string << endl;
  cout << "Evaluated : " << tree.GetRootAttributes()[0].Get<int>("v") << endl;
  return 0;
}
